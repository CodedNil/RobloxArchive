for _, v in ipairs(workspace:GetChildren()) do for _, m in ipairs(v:GetChildren()) do if (m:IsA("BlockMesh") and m.Scale == Vector3.new(1, 1, 1)) or (m:IsA("SpecialMesh") and m.MeshType == Enum.MeshType.Head) then m:Destroy() end end end
for _, v in ipairs(workspace:GetChildren()) do local mesh = v:FindFirstChild("Mesh") if mesh and v:IsA("BasePart") and mesh:IsA("SpecialMesh") and mesh.MeshType == Enum.MeshType.Brick then local cframe = v.CFrame v.Size = v.Size * mesh.Scale v.CFrame = cframe mesh:Destroy() end end
for _, v in ipairs(workspace:GetChildren()) do local mesh = v:FindFirstChild("Mesh") if mesh and v:IsA("BasePart") and mesh:IsA("SpecialMesh") and mesh.MeshType == Enum.MeshType.Cylinder then local cframe = v.CFrame v.Size = v.Size * mesh.Scale v.Size = Vector3.new(v.Size.Y, v.Size.X, v.Size.Z) v.CFrame = cframe * CFrame.Angles(0, 0, math.pi/2) mesh:Destroy() Instance.new("CylinderMesh", v) end end
for _, v in ipairs(workspace:GetChildren()) do local mesh = v:FindFirstChild("Mesh") if mesh and v:IsA("BasePart") and mesh:IsA("SpecialMesh") and mesh.MeshType == Enum.MeshType.Sphere then local cframe = v.CFrame v.Size = v.Size * mesh.Scale v.CFrame = cframe mesh.Scale = Vector3.new(1, 1, 1) end end
